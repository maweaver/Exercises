#! /usr/bin/env python

APPNAME = 'kaleidoscope'

import Logs
import os.path

srcdir = '.'
blddir = 'build'
llvmlibdir = '/usr/lib/llvm'

def add_libs(env, libs):
	for lib in libs:
		env.append_value('DLINKFLAGS', env.DLIB_ST % lib)

def set_options(opt):
	opt.tool_options('compiler_d')
	opt.tool_options('compiler_cc')
	opt.tool_options('gcc')
	opt.tool_options('bison')
	opt.tool_options('flex')

def configure(conf):
	conf.check_tool('compiler_d')
	conf.check_tool('compiler_cc')
	conf.check_tool('gcc')
	conf.check_tool('bison')
	conf.check_tool('flex')

	if not conf.env.D_COMPILER:
		conf.fatal("either dmd or gdc is required (d compilers)")
	conf.env.append_value('DFLAGS', conf.env.DPATH_ST % os.path.abspath(srcdir))
	conf.env.append_value('DLINKFLAGS', conf.env.DLIBPATH_ST % llvmlibdir)
	conf.env.append_value('DLINKFLAGS', conf.env.DLIBPATH_ST % os.path.abspath(blddir + '/default'))
	conf.env.append_value('CCFLAGS', '-I%s' % os.path.abspath(srcdir))
	conf.env.append_value('CCFLAGS', '-m32')
	conf.env.append_value('BISONFLAGS', '-d')
	add_libs(conf.env, [ 'm', 'LLVMCore', 'LLVMSupport', 'LLVMSystem', 'stdc++', 'lexparse' ])

def build(bld):
	bld.new_task_gen(
		features = 'cc cstaticlib',
		source = 'lexer.l parser.y',
		target = 'lexparse')

	bld.add_group()
	
	bld.new_task_gen(
		features = 'cc d dprogram',
		ccflags = [ '-m32' ],
		source = 'ast.d dotgen.d main.d stack.d llvmirgen.d',
		target = 'kaleidoscope')
