#! /usr/bin/env python

import Options

srcdir = '.'
blddir = 'build'

def set_options(opt):
	opt.tool_options('compiler_d')
	opt.tool_options('compiler_cc')

def configure(conf):
	conf.check_tool('compiler_cc')

	conf.env.append_value('CCFLAGS', '-ggdb')
	conf.env.append_value('CCFLAGS', '-std=c99')
	conf.env.append_value('CCFLAGS', '-Wall')
	conf.env.append_value('CCFLAGS', '-Werror')
	conf.env.append_value('CCFLAGS', '-pedantic-errors')
	
	gdc_env = conf.env.copy()
	dmd_env = conf.env.copy()
	conf.set_env_name('gdc', gdc_env)
	conf.set_env_name('dmd', dmd_env)
	
	conf.setenv('gdc')
	Options.options.check_dmd_first = 0
	conf.check_tool('compiler_d')
	conf.env['DFLAGS'] = [ '-g', '-B ../..' ]
	
	conf.setenv('dmd')
	Options.options.check_dmd_first = 1
	conf.check_tool('compiler_d')
	conf.env['DFLAGS'] = [ '-g', '-I../..' ]
	conf.env['DLINKFLAGS'] = [ '-L-L../../util/build/default' ]

def build(bld):
	addrev                =    bld.new_task_gen()
	addrev.features       =   'cc cprogram'
	addrev.source         =   'addrev.c'
	addrev.target         =   'addrev'

	intss                =    bld.new_task_gen()
	intss.features       =   'cc cprogram'
	intss.source         =   'intss.c'
	intss.target         =   'intss'

	maxiset              =    bld.new_task_gen()
	maxiset.features     =   'cc cprogram'
	maxiset.source       =   'maxiset.c'
	maxiset.target       =   'maxiset'

	prime1               =    bld.new_task_gen()
	prime1.features      =   'd dprogram'
	prime1.source        =   'prime1.d'
	prime1.target        =   'prime1'
	prime1.env           =    bld.env_of_name('dmd').copy()
	
	recequ               =    bld.new_task_gen()
	recequ.features      =   'd dprogram'
	recequ.source        =   'recequ.d'
	recequ.target        =   'receuq'
	recequ.libs          =    [ 'utils' ]
	recequ.env           =    bld.env_of_name('dmd').copy()

	bulk                 =    bld.new_task_gen()
	bulk.features        =   'cc cprogram'
	bulk.source          =   'bulk.c'
	bulk.target          =   'bulk'
	bulk.defines         =   'BULK_DUMP_OBJ'
